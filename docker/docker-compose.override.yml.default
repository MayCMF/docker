services:

# Override base service.
  php:
    image: ${IMAGE_PHP}
    container_name: "${COMPOSE_PROJECT_NAME}_php"
    environment:
      COMPOSER_MEMORY_LIMIT: "-1"
      COMPOSER_HOME: /home/www-data/.composer
    volumes:
      - "./90-mail.ini:/etc/php${PHP_VERSION}/conf.d/90-mail.ini:z"
      - ../${CODE_BASE_DIR}:/var/www/html:z
      - ../drush/.drushrc.php:/home/www-data/.drushrc.php:z # for linux `z` for mac `cache`
    restart: always
# Uncomment next line if you need PHP XDebug.
#     command: php-fpm83 -F -d zend_extension=xdebug.so -d xdebug.discover_client_host=0 -d xdebug.client_host=host.docker.internal -d xdebug.mode=debug -d xdebug.start_with_request=yes -d xdebug.log=/var/www/html/xdebug.log
#     command: php-fpm7 -F -d zend_extension=xdebug.so -d xdebug.remote_connect_back=0 -d xdebug.remote_host=192.168.65.2 -d xdebug.remote_autostart=1 -d xdebug.remote_log=/var/www/html/xdebug.log
#     command: php-fpm7 -F -d zend_extension=xdebug.so
    networks:
      - front

# Use local folder to not lose data on container crash.
# CAUTION: Don't use this section on development machine because container
# working speed will be decreased.
#  mysql:
#    volumes:
#    - ../../mysql:/var/lib/mysql:Z
# On for linux machines use ramfs, make sure to create the directory first.
#    - /dev/shm/${COMPOSE_PROJECT_NAME}_mysql:/var/lib/mysql:Z

#  adminer:
#    image: dockette/adminer:mysql-php7
#    container_name: "${COMPOSE_PROJECT_NAME}_adminer"
#    links:
#      - mysql:mysql
#    depends_on:
#      - mysql
#    networks:
#      - front

  mailhog:
    image: skilldlabs/mailhog
    container_name: "${COMPOSE_PROJECT_NAME}_mail"
    restart: always
    networks:
      - front
    ports:
      - "8025:8025"
      - "1025:1025"

  nginx:
# Uncomment for MacOS.
#    ports:
#    - "8088:80"
# Mount local folder with ssl keys.
#    volumes:
#     - ./nginx/ssl:/etc/nginx/ssl:Z
